<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<!-- Generated by MyEclipse Hibernate Tools.                   -->
<hibernate-configuration>
    <session-factory>
        <!-- 连接数据库的信息-->
        <property name="dialect">
            org.hibernate.dialect.MySQLDialect
        </property>
        <property name="hibernate.connection.driver_class">
            com.mysql.jdbc.Driver
        </property>
        <property name="hibernate.connection.url">
            jdbc:mysql://localhost:3306/cpa?useUnicode=true&amp;characterEncoding=utf8
        </property>
        <property name="hibernate.connection.username">root</property>
        <property name="hibernate.connection.password">root</property>
        <!--错误org.hibernate.HibernateException: Error applying BeanValidation relational constraints的解决方法-->
        <property name="javax.persistence.validation.mode">none</property>
        <!-- 将hibernate底层执行的sql语句从控制台显示 -->
        <property name="show_sql">true</property>
        <property name="format_sql">true</property>
        <!-- 自动建表 -->
        <property name="hibernate.hbm2ddl.auto">update</property>
        <!-- 报错信息为：No CurrentSessionContext configured!或者No TransactionManagerLookup specified -->
        <property name="current_session_context_class">thread</property>

        <!-- 开启二级缓存-->
        <property name="hibernate.cache.use_second_level_cache">true</property>

        <!--查询缓存与hibernate二级缓存是有区别的-->
        <!--默认情况下二级缓存只会对load get 之类的方法缓存， 想list iterator 之类的方法也使用缓存 必须跟查询缓存一起使用， 重写查询方法-->
        <!--1、一级缓存是session级别的，二级缓存和查询缓存都是sessionfactory级别的，查询缓存和二级缓存是一起来使用的 .setCacheable(true) criteria.setCacheable(true).list();-->

        <!--2、任何sql执行都会存入到同一个session的一级缓存中去-->

        <!--3、同时开启查询缓存和二级缓存，可以在不同session间共享缓存的结果-->

        <!--4、二级缓存缓存的是实体，不是属性-->

        <!--5、查询缓存的结果如果只是属性，那么查询缓存中存储的是id和属性的值，如果是实体的集合，那么查询缓存存储的只是实体的id，对应的实体会存储到二级缓存中去。-->

        <!--6、不同session间返回数据的顺序是，二级缓存先将数据返回，然后将数据存入本session的一级缓存中去，以便下次调用时的使用-->
        <!--二级缓存是用来保存类对象的，并且填充它的所有属性值-->
        <!--查询缓存保存的是查询方法（list和iterate等）查询的sql语句和结果集，跟load这种装载对象的方法没有关系。也就是说，使用load方法，查询缓存不理睬,并且这个结果集只是对象id列表，对象的其他属性值不保存。例如，list执行的时候，先根据查询缓存中的sql语句，获取对象id列表，然后再load(id)来取对象-->
        <!--查询缓存是只存储对象的id的，并不去存储真正的对象，查询缓存作为key值的是   hql语句+参数+分页-->
        <!-- 启动"查询缓存"如果想缓存使用findall()、list()、Iterator()、createCriteria()、createQuery()等方法获得的数据结果集,必须配置此项-->
        <!--查询缓存,使用时query.list()查询时，setCacheable设置TRUE,query.setCacheable(true)-->
        <!--Iterator不使用查询缓存（查询缓存仅仅对query.list(）有效）-->
        <property name="hibernate.cache.use_query_cache">true</property>
        <!-- 高速缓存提供程序,设置缓存提供者 -->
        <property name="hibernate.cache.region.factory_class">
            org.hibernate.cache.ehcache.EhCacheRegionFactory
            <!--org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory-->
        </property>
        <!-- Hibernate4以后都封装到org.hibernate.cache.ehcache.EhCacheRegionFactory -->
        <!-- 指定缓存配置文件位置 -->
        <property name="hibernate.cache.provider_configuration_file_resource_path">
            ehcache.xml
        </property>
        <!-- 强制Hibernate以更人性化的格式将数据存入二级缓存 -->
        <property name="hibernate.cache.use_structured_entries">true</property>

        <!-- Hibernate将收集有助于性能调节的统计数据,可以得到二级缓存命中次数等数据 -->
  <!--  Statistics s = HibernateSessionFactoryUtil.getSessionFactory().getStatistics();
        System.out.println(s);
        System.out.println("put:"+s.getSecondLevelCachePutCount());
        System.out.println("hit:"+s.getSecondLevelCacheHitCount());
        System.out.println("miss:"+s.getSecondLevelCacheMissCount());-->
        <property name="hibernate.generate_statistics">true</property>

        <!-- 加载映射文件 ,注册ORM映射文件-->
        <mapping resource="CpaUser.hbm.xml"/>
        <mapping resource="CpaOption.hbm.xml"/>
        <mapping resource="CpaRepertory.hbm.xml"/>
        <mapping resource="CpaSolution.hbm.xml"/>

        <!--指定需要缓存的对象类型:这里可以在映射文件中配置，也可以在hibernate核心配置文件中进行配置（推荐）-->
        <!--这个<class-cache>标签必须放在<mapping>标签的后面！-->
        <!--配置哪些实体类的对象需要二级缓存  ,usage属性为缓存策略  -->
        <class-cache class="cn.kanyun.cpa.model.exam.CpaRepertory" usage="read-write"/>
        <class-cache class="cn.kanyun.cpa.model.exam.CpaOption" usage="read-write"/>
        <class-cache class="cn.kanyun.cpa.model.exam.CpaSolution" usage="read-write"/>
    </session-factory>

</hibernate-configuration>